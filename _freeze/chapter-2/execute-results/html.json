{
  "hash": "837a1040e7ba013807c1102fa78488a0",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\n---\n\n\n## Notes\n\n`alpha` aesthetic to add transparency to the filled density curves.\n\nThis aesthetic takes values between 0 (completely transparent) and 1 (completely opaque)\n\nis to split your plot into **facets**, subplots that each display one subset of the data.\n\nTo facet your plot by a single variable, use [`facet_wrap()`](https://ggplot2.tidyverse.org/reference/facet_wrap.html). The first argument of [`facet_wrap()`](https://ggplot2.tidyverse.org/reference/facet_wrap.html) is a formula^[2](https://r4ds.hadley.nz/data-visualize.html#fn2)^, which you create with `~` followed by a variable name. The variable that you pass to [`facet_wrap()`](https://ggplot2.tidyverse.org/reference/facet_wrap.html) should be categorical.\n\n## Questions\n\nMake a scatterplot of `hwy` vs. `displ` using the `mpg` data frame. Next, map a third, numerical variable to `color`, then `size`, then both `color` and `size`, then `shape`. How do these aesthetics behave differently for categorical vs. numerical variables?\n\nthat second part of the question is really unclear to me\n\n3.In the scatterplot of `hwy` vs. `displ`, what happens if you map a third variable to `linewidth`?\n\ni don't know how to map a third variable??\n\n## 2.2.5 Exercises\n\n1.How many rows are in penguins? How many columns?\n\n344 rows and 8 columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n\n\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n```\n:::\n:::\n\n\n2.What does the bill_depth_mm variable in the penguins data frame describe? Read the help for ?penguins to find out.\n\n?penguins\n\na number denoting bill depth (millimeters)\n\n3.Make a scatterplot of bill_depth_mm vs. bill_length_mm. Describe the relationship between these two variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#it looks like to me that there can be long narrow beaks and long wide beaks aswell as  shorter beaks that have more depth seems pretty balanced\n```\n:::\n\n\n4.What happens if you make a scatterplot of species vs bill_depth_mm? Why is the plot not useful?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, aes(x = species, y = bill_depth_mm)) + geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n5.Why does the following give an error and how would you fix it?\n\nthat code has no x or y mapping\n\n6.What does the na.rm argument do in geom_point()? What is the default value of the argument? Create a scatterplot where you successfully use this argument set to TRUE.\n\nthe na.rm argument takes away the warning message. The default is false.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point(na.rm = TRUE)\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n7.Add the following caption to the plot you made in the previous exercise: \"Data come from the palmerpenguins package.\" Hint: Take a look at the documentation for labs().\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point(na.rm = TRUE) + labs(caption = \"Data come from the palmerpenguins package\")\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n8.Recreate the following visualization. What aesthetic should bill_depth_mm be mapped to? And should it be mapped at the global level or at the geom level?\n\njust at the geom level\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins,aes( x = flipper_length_mm, y = body_mass_g, color = bill_depth_mm)) + geom_point() + geom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following aesthetics were dropped during statistical transformation: colour\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n9.Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.\n\nit came out somewhat of what i thought it looked like i didn't really understand the se = FALSE argument\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g, color = island)\n) +\n  geom_point() +\n  geom_smooth(se = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n10.Will these two graphs look different? Why/why not?\n\nya i think they will look the same because they are doing the same thing one is just writen out\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point() +\n  geom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_point(\n    data = penguins,\n    mapping = aes(x = flipper_length_mm, y = body_mass_g)\n  ) +\n  geom_smooth(\n    data = penguins,\n    mapping = aes(x = flipper_length_mm, y = body_mass_g)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## 2.4.3 Exercises\n\n1.Make a bar plot of species of penguins, where you assign species to the y aesthetic. How is this plot different?\n\nall it does is make the bars horizontal instead of vertical\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(y = species)) + geom_bar()\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n2.How are the following two plots different? Which aesthetic, color or fill, is more useful for changing the color of bars?\n\nthe first code outlines the bars while the second code completely shades in the bars,the second is more useful\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = species)) +\n  geom_bar(color = \"red\")\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = species)) +\n  geom_bar(fill = \"red\")\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n3.What does the `bins` argument in [`geom_histogram()`](https://ggplot2.tidyverse.org/reference/geom_histogram.html) do?\n\nit determines the width or size of the bars\n\n4.Make a histogram of the `carat` variable in the `diamonds` dataset. Experiment with different binwidths. What binwidth reveals the most interesting patterns?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(diamonds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 53,940\nColumns: 10\n$ carat   <dbl> 0.23, 0.21, 0.23, 0.29, 0.31, 0.24, 0.24, 0.26, 0.22, 0.23, 0.…\n$ cut     <ord> Ideal, Premium, Good, Premium, Good, Very Good, Very Good, Ver…\n$ color   <ord> E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J, I,…\n$ clarity <ord> SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS1, …\n$ depth   <dbl> 61.5, 59.8, 56.9, 62.4, 63.3, 62.8, 62.3, 61.9, 65.1, 59.4, 64…\n$ table   <dbl> 55, 61, 65, 58, 58, 57, 57, 55, 61, 61, 55, 56, 61, 54, 62, 58…\n$ price   <int> 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340, 34…\n$ x       <dbl> 3.95, 3.89, 4.05, 4.20, 4.34, 3.94, 3.95, 4.07, 3.87, 4.00, 4.…\n$ y       <dbl> 3.98, 3.84, 4.07, 4.23, 4.35, 3.96, 3.98, 4.11, 3.78, 4.05, 4.…\n$ z       <dbl> 2.43, 2.31, 2.31, 2.63, 2.75, 2.48, 2.47, 2.53, 2.49, 2.39, 2.…\n```\n:::\n\n```{.r .cell-code}\nggplot(diamonds,aes(x = carat)) + geom_histogram(binwidth = .10)\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\ni think .10 binwidth shows the most results\n\n## 2.5.5 Exercises\n\n1.  Which variables in `mpg` are categorical? Which variables are continuous? (Hint: type [`?mpg`](https://ggplot2.tidyverse.org/reference/mpg.html) to read the documentation for the dataset). How can you see this information when you run `mpg`?\n\n6 categorical,displ is continous,glimpse(mpg) or type mpg or the help function ?mpg\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 234\nColumns: 11\n$ manufacturer <chr> \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        <chr> \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        <dbl> 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         <int> 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          <int> 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        <chr> \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          <int> 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           <chr> \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        <chr> \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n```\n:::\n\n```{.r .cell-code}\nmpg\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# … with 224 more rows\n```\n:::\n:::\n\n\n2.  Make a scatterplot of `hwy` vs. `displ` using the `mpg` data frame. Next, map a third, numerical variable to `color`, then `size`, then both `color` and `size`, then `shape`. How do these aesthetics behave differently for categorical vs. numerical variables?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg,aes(x = hwy, y = displ,color = cty)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg,aes(x = hwy, y = displ,size = cty)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg,aes(x = hwy, y = displ,size = cty,color = cty)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n3.In the scatterplot of `hwy` vs. `displ`, what happens if you map a third variable to `linewidth`?\n\nthere is no line to alter\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg,aes(x = hwy, y = displ,linewidth = cty)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n4.what happens if you map the same variable to multiple aesthetics?\n\njust shows the variable by its self,doesn't really show much information\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg,aes(x = hwy, y = hwy, color  = hwy)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n5.Make a scatterplot of `bill_depth_mm` vs. `bill_length_mm` and color the points by `species`. What does adding coloring by species reveal about the relationship between these two variables?\n\nthat adelies tend to have more depth in their bills while gentoo are longer all while chinstrap are both long and have depth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins,aes(x = bill_depth_mm, y = bill_length_mm,color = species)) + geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n6.Why does the following yield two separate legends? How would you fix it to combine the two legends?\n\nbecause the labs argument makes another legend, i just took that argument out\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_length_mm, y = bill_depth_mm, \n    color = species, shape = species\n  )\n) +\n  geom_point() \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n## 2.6.1 Exercises\n\n1.Run the following lines of code. Which of the two plots is saved as `mpg-plot.png`? Why?\n\nthe second line of code is saved,because ggsave saves the last plot you made\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x = class)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(mpg, aes(x = cty, y = hwy)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](chapter-2_files/figure-html/unnamed-chunk-22-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"mpg-plot.png\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n2.What do you need to change in the code above to save the plot as a PDF instead of a PNG?\n\nyou just have to change the png to pdf in the last ggsave code chunk\n",
    "supporting": [
      "chapter-2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}