---
title: "Communication"
---

## Prerequisites

```{r}
library(scales)
library(tidyverse)
library(lubridate)
library(ggrepel)
library(patchwork)
```


## Solutions

## Exercises 12.2.1

1.  Create one plot on the fuel economy data with customized `title`, `subtitle`, `caption`, `x`, `y`, and `color` labels.

```{r}
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class)) +
  geom_smooth(se = FALSE) +
  labs( title = "insert title here",
        subtitle = "insert subtitle here",
        caption = "insert source here",
    x = "Engine displacement (L)",
    y = "Highway fuel economy (mpg)",
    color = "Car type"
  )
```

2.Recreate the following plot using the fuel economy data. Note that both the colors and shapes of points vary by type of drive train

```{r}
glimpse(mpg)

mpg %>% ggplot(aes(x = cty,y = hwy,color = drv,shape = drv)) +
  geom_point() +
  labs(x = "City MPG",
        y = "Highway MPG",
        shape = "Type of drive train",
       color = "Type of drive train"
       )
```

## Exercises 12.3.1

1.Use [`geom_text()`](https://ggplot2.tidyverse.org/reference/geom_text.html) with infinite positions to place text at the four corners of the plot.

```{r}
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
 annotate(geom = "text",
          x = 7,y = 45, label = "help",
          color = "red")
```

```{r}

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
 annotate(geom = "text",
          x = 1,y = 45, label = "help",
          color = "red")
```

```{r}

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
 annotate(geom = "text",
          x = 1,y = 1, label = "help",
          color = "red")
```

```{r}
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
 annotate(geom = "text",
          x = 7,y = 1, label = "help",
          color = "red")
```

2.Use [`annotate()`](https://ggplot2.tidyverse.org/reference/annotate.html) to add a point geom in the middle of your last plot without having to create a tibble. Customize the shape, size, or color of the point.

```{r}
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  annotate(
    geom = "label", x = 3.5, y = 38,
    label = "Increasing engine size is \nrelated to decreasing fuel economy.",
    hjust = "left", color = "red"
  ) +
  annotate(
    geom = "segment",
    x = 3, y = 35, xend = 5, yend = 25, color = "blue",
    arrow = arrow(type = "closed")
  )
```

3.How do labels with [`geom_text()`](https://ggplot2.tidyverse.org/reference/geom_text.html) interact with faceting? How can you add a label to a single facet? How can you put a different label in each facet? (Hint: Think about the underlying data.)

geom text puts a label at each point on every facet.

```{r}
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  facet_grid(vars(drv)) +
  geom_text(label = "a", nudge_y = 6)


ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(alpha = 0.1) +
  facet_wrap(~drv) +
  geom_text(data = mpg |> filter(drv == "f"), aes(label = drv), nudge_x = 1)




ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(alpha = 0.1) +
  facet_wrap(~drv) +
  geom_text(data = mpg |> filter(drv == "f"), aes(label = drv), nudge_x = 1) +
   geom_text(data = mpg |> filter(drv == "4"), aes(label = drv), nudge_x = 1) +
   geom_text(data = mpg |> filter(drv == "r"), aes(label = drv), nudge_x = 1)


```

4.What arguments to [`geom_label()`](https://ggplot2.tidyverse.org/reference/geom_text.html) control the appearance of the background box?

5.What are the four arguments to [`arrow()`](https://rdrr.io/r/grid/arrow.html)? How do they work? Create a series of plots that demonstrate the most important options.

```{r}
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  annotate(
    geom = "label", x = 3.5, y = 38,
    label = "Increasing engine size is \nrelated to decreasing fuel economy.",
    hjust = "left", color = "red"
  ) +
  annotate(
    geom = "segment",
    x = 3, y = 35, xend = 5, yend = 25, color = "blue",
    arrow = arrow(type = "closed")
  )

```

```{r}
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  annotate(
    geom = "label", x = 3.5, y = 38,
    label = "Increasing engine size is \nrelated to decreasing fuel economy.",
    hjust = "left", color = "red"
  ) +
  annotate(
    geom = "segment",
    x = 3, y = 35, xend = 5, yend = 25, color = "blue",
    arrow = arrow(type = "open")
  )
```

```{r}
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  annotate(
    geom = "label", x = 3.5, y = 38,
    label = "Increasing engine size is \nrelated to decreasing fuel economy.",
    hjust = "left", color = "red"
  ) +
  annotate(
    geom = "segment",
    x = 3, y = 35, xend = 5, yend = 25, color = "blue",
    arrow = arrow(ends = "first",type = "closed")
  )
```

```{r}
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  annotate(
    geom = "label", x = 3.5, y = 38,
    label = "Increasing engine size is \nrelated to decreasing fuel economy.",
    hjust = "left", color = "red"
  ) +
  annotate(
    geom = "segment",
    x = 3, y = 35, xend = 5, yend = 25, color = "blue",
    arrow = arrow(length = unit(0.70, "inches"),type = "closed")
  )
```

## Exercises 12.4.6

1.Why doesn't the following code override the default scale?

because geom hex already fills this in you could use scale_fill instead

```{r}
df <- tibble(
  x = rnorm(10000),
  y = rnorm(10000)
)

ggplot(df, aes(x, y)) +
  geom_hex() +
  scale_color_gradient(low = "black", high = "red") +
  coord_fixed()
```

2.What is the first argument to every scale? How does it compare to [`labs()`](https://ggplot2.tidyverse.org/reference/labs.html)?

name or palette ,you can label your x and y axis with scale_x\_continous and also labs

3.Change the display of the presidential terms by:

a.  Combining the two variants that customize colors and x axis breaks.

b.  Improving the display of the y axis.

c.  Labelling each term with the name of the president.

d.  Adding informative plot labels.

e.  Placing breaks every 4 years (this is trickier than it seems!).

```{r}
library(lubridate)
presidential |>
  mutate(id = 33 + row_number()) |>
  ggplot(aes(x = start, y = id, color = party)) +
  geom_point() +
  geom_segment(aes(xend = end, yend = id)) +
  scale_color_manual(values = c(Republican = "#E81B23", Democratic = "#00AEF3")) +
    scale_x_date(name = "Term", breaks = seq(from = ymd("1953-01-20"), to = ymd("2021-01-20"), by = "4 years"), date_labels = "'%y") +
scale_y_continuous(
  name = "president",
  breaks = 34:45,
  labels = presidential$name
)
```

4\.

```{r}
ggplot(diamonds, aes(x = carat, y = price)) +
  geom_point(aes(color = cut), alpha = 1/20) +
    guides(color = guide_legend(override.aes = list(alpha = 1) ) )

```

## Exercises 12.5.1

1.Pick a theme offered by the ggthemes package and apply it to the last plot you made.

```{r}
 library(ggthemes)
ggplot(diamonds, aes(x = carat, y = price)) +
  geom_point(aes(color = cut), alpha = 1/20) +
    guides(color = guide_legend(override.aes = list(alpha = 1) ) ) +
  theme_economist()
```

2.Make the axis labels of your plot blue and bolded

```{r}
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() + 
xlab(substitute(paste(bold("something")))) +
  ylab(substitute(paste(bold("something"))))

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  theme(axis.title = element_text(color = "blue",face = "bold"))
```

## Exercises 12.6.1

1\. What happens if you omit the parentheses in the following plot layout. Can you explain why this happens?

it looks like it turns the plots like vertical if that makes sense

```{r}
p1 <- ggplot(mpg, aes(x = displ, y = hwy)) + 
  geom_point() + 
  labs(title = "Plot 1")
p2 <- ggplot(mpg, aes(x = drv, y = hwy)) + 
  geom_boxplot() + 
  labs(title = "Plot 2")
p3 <- ggplot(mpg, aes(x = cty, y = hwy)) + 
  geom_point() + 
  labs(title = "Plot 3")

(p1 | p2) / p3
```

2.Using the three plots from the previous exercise, recreate the following patchwork.

```{r}
p3 / (p2 | p1)
```
